import os

from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database.db_connection import Database

db = Database()


async def types_keyboard(message: types.Message) -> None:
    builder = InlineKeyboardBuilder()
    types_of_sport = await db.get_all_types()
    for kind in types_of_sport:
        builder.button(text=kind, callback_data=kind)
    builder.adjust(1)
    await message.answer(
        text=f"–í—ã–±–µ—Ä–∏ –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞ üèÖ",
        reply_markup=builder.as_markup()
    )


async def choose_keyboard(call: types.CallbackQuery) -> None:
    global prev
    builder = InlineKeyboardBuilder()
    callback = call.data
    if call.data in await db.get_all_types():
        prev = callback
        leagues = await db.get_all_leagues(kind=callback)
        for league in leagues:
            builder.button(text=league, callback_data=league)
        builder.adjust(1)
        await call.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª {callback.lower()}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –ª–∏–≥—É ‚¨á",
            reply_markup=builder.as_markup()
        )
    else:
        teams = await db.get_all_teams(callback)
        for team in teams:
            builder.button(text=team, callback_data=team)
        builder.adjust(1)
        if callback in await db.get_all_teams(prev):
            await db.set_favourite_team(tg_id=call.from_user.id, favourite_team=call.data)
            await call.message.edit_text(text=f"–¢—ã –±–æ–ª–µ–µ—à—å –∑–∞ {callback}. –ö—Ä—É—Ç–æ! üòç\n–Ø —ç—Ç–æ –∑–∞–ø–æ–º–Ω–∏–ª –∏ –±—É–¥—É —Ç–µ–±—è "
                                              f"—É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –º–∞—Ç—á–∞—Ö –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 9:00 –∏ 21:00 üïò\n"
                                              f"–ê –∫–æ–≥–¥–∞ –º–∞—Ç—á –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, —è —Å–æ–æ–±—â—É —Ç–µ–±–µ —Å—á—ë—Ç üîä")
        else:
            await call.message.edit_text(
                text=f"–¢—ã –≤—ã–±—Ä–∞–ª {callback}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É ‚¨á",
                reply_markup=builder.as_markup()
            )
    prev = call.data

